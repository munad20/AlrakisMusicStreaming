# NOTE:
# The ops team has announced, that they want t[1-14] (t for team and team number) to be used as a prefix when naming.
# Furthermore, services must always use internal communication and only be called service0[0-9] if they are to
# communicate with the world.
#
# Setup network
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1

kind: Service

metadata:
  name:
    development # the service name must start with t[1-14] or use service0[0-9] as name to communicate with the world
    # (must be unique to the Service otherwise other Service will be overwritten)

spec:
  ports:
    - port: 80 # incoming port
      protocol: TCP # protocol
      targetPort: 8080 # target port (to the vue project container)

  selector:
    app: t01-api # target container

  type:
    ClusterIP # always use internal communication, 'ClusterIP', read service name comment
    # (.metadata.name) about how to communicate with the world

---
# Setup deployment
# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1

kind: Deployment

metadata:
  name:
    t01-api # the deployment name must start with t[1-14]
    # (must be unique to the Deployment otherwise other Deployment will be overwritten)

spec:
  replicas: 1 # Deployment creates x replicated Pod(s)

  selector: # define which Pod(s) the Deployment should manage
    matchLabels:
      app: t01-api

  template:
    metadata:
      labels: # label(s) for replica selector to match
        app: t01-api

    spec:
      containers:
        - name: t01-api # container name
          image: gitlab.sdu.dk:5050/semester-project-e2021/team-01/template/api:2.0.0
          imagePullPolicy: Always # always pull image from registry and if not found look in the cached images
          ports:
            - containerPort: 5000 # container port(s)
          env:
            - name: NODE_ENV
              value: "production"

      imagePullSecrets:
        - name: sdugitlab # this is necessary to access the sdu gitlab container registry
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: t01-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: t01-api
  minReplicas: 1
  maxReplicas: 1
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 40
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 50
#  Deployment
#  -------------
#  $ kubectl get deployments
#  NAME               READY   UP-TO-DATE   AVAILABLE   AGE
#  t12-api            1/1     1            1           36s

#  Pods
#  -------------
#  $ kubectl get pods
#  NAME                         READY     STATUS    RESTARTS   AGE
#  t12-api-431080787-9r0lx      1/1       Running   0          40s
