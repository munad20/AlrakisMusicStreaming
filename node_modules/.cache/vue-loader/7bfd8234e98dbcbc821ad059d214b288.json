{"remainingRequest":"/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/src/components/content/hitlists.vue?vue&type=template&id=18761e70&scoped=true&","dependencies":[{"path":"/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/src/components/content/hitlists.vue","mtime":1635540825868},{"path":"/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/node_modules/cache-loader/dist/cjs.js","mtime":1635410651407},{"path":"/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1635410651879},{"path":"/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/node_modules/cache-loader/dist/cjs.js","mtime":1635410651407},{"path":"/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/node_modules/vue-loader/lib/index.js","mtime":1635410651757}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}