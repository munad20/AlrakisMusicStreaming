{"remainingRequest":"/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/src/flask/flaskPlaylist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/src/flask/flaskPlaylist.vue","mtime":1635625337318},{"path":"/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/node_modules/cache-loader/dist/cjs.js","mtime":1635410651407},{"path":"/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/node_modules/babel-loader/lib/index.js","mtime":1635410651687},{"path":"/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/node_modules/cache-loader/dist/cjs.js","mtime":1635410651407},{"path":"/Users/muhamadsdu/Desktop/Semester 3/semesterprojekt/template/node_modules/vue-loader/lib/index.js","mtime":1635410651757}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJAL2ZsYXNrL2ZsYXNrUGxheWxpc3QiOwpjb25zdCBiYXNlVVJMID0gImh0dHA6Ly9sb2NhbGhvc3Q6NTAwMCIKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiZmxhc2tQbGF5bGlzdCIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc3RJZDpbXSwKICAgICAgZmxhc2tOYW1lOiAiIiwKICAgICAgZmxhc2tUZXN0czogW10KICAgIH07CiAgfSwKICBhc3luYyBjcmVhdGVkKCl7CiAgICBmZXRjaChiYXNlVVJMKS50aGVuKChyKT0+ci5qc29uKCkpLnRoZW4oKGopPT50aGlzLmZsYXNrVGVzdHM9aikKICB9LCAgYXN5bmMgcG9zdCgpewogICAgdHJ5IHsKICAgICAgY29uc3QgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgaGVhZGVyczogeyJTb25nTmFtZSI6ICJmbGFza1Rlc3RzIn0sCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3RpdGxlOiAidnVlUG9zdEV4YW1wbGUifSkKICAgICAgfTsKICAgICAgZmV0Y2goImh0dHA6Ly9sb2NhbGhvc3Q6NTAwMCIsIHJlcXVlc3RPcHRpb25zKQogICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZSgpKQogICAgICAudGhlbihkYXRhID0+ICh0aGlzLnBvc3RJZCA9IGRhdGEuaWQpKQogICAgfSBjYXRjaCAoZSkKICAgIHsKICAgICAgY29uc29sZS5lcnJvcihlKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGFkZEZsYXNrVGVzdCgpCiAgICB7CiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0ICBheGlvcy5wb3N0KGJhc2VVUkwsIHtuYW1lOiB0aGlzLmZsYXNrTmFtZX0pOwoKICAgICAgdGhpcy5mbGFza1Rlc3RzID0gWy4uLnRoaXMuZmxhc2tUZXN0cywgcmVzLmRhdGFdOwogICAgICB0aGlzLmZsYXNrTmFtZSA9ICIiOwogICAgfQogIH0KfQo="},{"version":3,"sources":["flaskPlaylist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"flaskPlaylist.vue","sourceRoot":"src/flask","sourcesContent":["<template>\n  <div id=\"flaskPlaylist\">\n    <ul>\n      <li class=\"row\" v-for=\"post in flaskTests\" :key=\"post\">\n        <div class=\"column\">\n          <span>{{post.SongName}}</span>\n        </div>\n        <div class=\"column\">\n         <span>{{post.Artist}}</span>\n        </div>\n        <div class=\"column\">\n          <span>{{post.Album}}</span>\n        </div>\n      </li>\n    </ul>\n  </div>\n</template>\n<script>\nimport axios from \"@/flask/flaskPlaylist\";\nconst baseURL = \"http://localhost:5000\"\n\nexport default {\n  name: \"flaskPlaylist\",\n  data() {\n    return {\n      postId:[],\n      flaskName: \"\",\n      flaskTests: []\n    };\n  },\n  async created(){\n    fetch(baseURL).then((r)=>r.json()).then((j)=>this.flaskTests=j)\n  },  async post(){\n    try {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\"SongName\": \"flaskTests\"},\n        body: JSON.stringify({title: \"vuePostExample\"})\n      };\n      fetch(\"http://localhost:5000\", requestOptions)\n      .then(response => response())\n      .then(data => (this.postId = data.id))\n    } catch (e)\n    {\n      console.error(e);\n    }\n  },\n  methods: {\n    async addFlaskTest()\n    {\n      const res = await  axios.post(baseURL, {name: this.flaskName});\n\n      this.flaskTests = [...this.flaskTests, res.data];\n      this.flaskName = \"\";\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n\n.row:after {\n  content: \"\";\n  display: table;\n  clear: both;\n\n}\n\n.column {\n  float: left;\n  width: 20%;\n  padding: 5%;\n  margin-bottom: -7%;\n\n}\n\nli{\n  list-style-type: none;\n}\n\n\n</style>\n"]}]}